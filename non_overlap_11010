// 11010 Non-overlapping sequence detector using Mealy state machine
module nonoverlap11010(in,clk,rst,out);
reg [2:0]state;
input in,rst,clk;
output reg out;

parameter s0 = 0;
parameter s1 = 1;
parameter s2 = 2;
parameter s3 = 3;
parameter s4 = 4;

initial begin 
state <= s0;
end

always @(posedge clk)  begin

if (rst == 1'b1) begin
state <= s0;
out <= 0;
end
else begin
case (state)
s0 : begin state <= in?s1:s0; out <= 0; end
s1 : begin state <= in?s2:s0; out <= 0; end
s2 : begin state <= in?s2:s3; out <= 0; end
s3 : begin state <= in?s4:s0; out <= 0; end
s4 : begin state <= in?s2:s0; out <= in?0:1; end     //output 1 
default: state <= s0;
endcase
end
end

endmodule




/////////     Test Bench for the above code      //////

module tb_11010_nonoverlap;
reg in,clk,rst;
wire out; 

nonoverlap11010 uut(in,clk,rst,out);
initial begin
clk = 0;
rst = 0;
in = 0;
end
always #5 clk = ~clk;

initial begin
$monitor($time,"in = %b  out = %b state = %d", in,out,uut.state); //notice how to summon 'state' from main code
#10 in = 1;
#10 in = 1;
#10 in = 0;
#10 in = 1;
#10 in = 1;
#10 in = 0;
#10 in = 1;
#10 in = 1;
#10 in = 0;
#10 in = 1;
#10 in = 0; //Output = 1
#10 in = 1;
#10 in = 1;
#10 in = 0;
#10 in = 0;
#10 in = 0;
#10 in = 0;
#10 in = 0;
#10 in = 1;
#10 in = 1;
#10 in = 1;
#10 in = 1;
#10 in = 1;
#10 in = 0;
#10 in = 1;
#10 in = 0; // Output = 1
end
endmodule
