//Verilog code for 4-bit left shift register
module shift_reg_left(in,out,clk,rst);
input clk,rst;
input in;
output reg [3:0]out;

always @(posedge clk) begin

if (!rst) out=0;
else
out = {out[2:0],in}; //Just change this to make it left shift
end

endmodule

/////// Testbench ///////
module tb_shift_reg_left();
reg clk,rst,in;
wire [3:0]out;

shift_reg_left uut(in,out,clk,rst);

initial begin 
rst=0;
clk=1;
in=0;
#10 rst = 1;
#10 in = 1;
#10 in = 0;
#50 in = 1;
#10 in = 0;
#50 $stop;
end
always #5 clk= ~clk;
endmodule
