//32-bit ALU using casex statement 
module alu32bit(a,b,f,out);
input [31:0]a,b;
input [2:0] f;
output reg [63:0]out;

always @(f) begin
casex(f)
3'b000:out=a+b;
3'b001:out=a+1'b1 ;
3'b010:out=a-b ;
3'b011:out=a-1'b1 ;
3'b10x:out=a*b ;
default: out = 64'bz;
endcase
end

endmodule

//Test Bench code
module alu32bit_TB();
reg [31:0] A,B;
reg [2:0] F;
wire [63:0] OUT;

alu32bit uut(.a(A),.b(B),.f(F),.out(OUT));

initial begin
A=32'd65535;
B=32'd65227;
#10 F= 3'b000;
#10 F= 3'b001;
#10 F= 3'b010;
#10 F= 3'b011;
#10 F= 3'b100;
#10 F= 3'b101;
#10 F= 3'b110;
#10 F= 3'b111;
end
endmodule
